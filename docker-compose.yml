version: '3.8'

# Development environment for Internal Tools Platform
# Start with: npm run docker:up

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: internal-tools-postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: internal_tools
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - internal-tools
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d internal_tools"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: internal-tools-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./infrastructure/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - internal-tools
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: internal-tools-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./infrastructure/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal-tools

  # RedisInsight for Redis management
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: internal-tools-redisinsight
    ports:
      - "8081:8001"
    volumes:
      - redisinsight_data:/db
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - internal-tools

  # Development dashboard (optional)
  dev-dashboard:
    build:
      context: ./tools/dev-dashboard
      dockerfile: Dockerfile
    container_name: internal-tools-dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - SHARED_SERVICES_URL=http://host.docker.internal:3001
    networks:
      - internal-tools
    profiles:
      - dashboard

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  redisinsight_data:
    driver: local

networks:
  internal-tools:
    driver: bridge
    name: internal-tools-network